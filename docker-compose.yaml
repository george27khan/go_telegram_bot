version: "1"

services:
  postgres_db:
    container_name: postgres
    image: postgres:latest
    restart: always
    command: postgres -c timezone=posix/Asia/Almaty -c log_timezone=posix/Asia/Almaty
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network


  redis:
    container_name: redis
    image: "redis:alpine"
    command: redis-server --requirepass sOmE_sEcUrE_pAsS
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/var/lib/redis
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s  # Интервал проверки
      timeout: 5s    # Тайм-аут проверки
      retries: 3     # Количество попыток
    networks:
      - app-network


  app:
    build:
      dockerfile: Dockerfile
      context: .
    ports:
      - "3000:3000"
    depends_on:
      postgres_db:
        condition: service_healthy  # Ждет, пока сервис postgres_db не станет "здоровым"
      redis:
        condition: service_healthy  # Ждет, пока сервис redis не станет "здоровым"
    networks:
      - app-network



#  pgadmin:
#    container_name: pgadmin
#    image: dpage/pgadmin4
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@admin.com
#      PGADMIN_DEFAULT_PASSWORD: root
#    volumes:
#      - ./Docker/pgadmin/:/var/lib/pgadmin
#    ports:
#      - "5050:80"
#    networks:
#      - postgres



networks:
  app-network:
    driver: bridge


volumes:
  postgres:
